_readableState: ReadableState {
  objectMode: false,
    highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
    pipes: [],
      flowing: null,
        ended: true,
          endEmitted: false,
            reading: false,
              sync: true,
                needReadable: false,
                  emittedReadable: false,
                    readableListening: false,
                      resumeScheduled: false,
                        errorEmitted: false,
                          emitClose: true,
                            autoDestroy: false,
                              destroyed: false,
                                errored: null,
                                  closed: false,
                                    closeEmitted: false,
                                      defaultEncoding: 'utf8',
                                        awaitDrainWriters: null,
                                          multiAwaitDrain: false,
                                            readingMore: true,
                                              decoder: null,
                                                encoding: null,
                                                  [Symbol(kPaused)]: null
},
_events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
_eventsCount: 1,
  _maxListeners: undefined,
    socket: <ref * 1 > Socket {
  connecting: false,
    _hadError: false,
      _parent: null,
        _host: null,
          _readableState: ReadableState {
    objectMode: false,
      highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
      pipes: [],
        flowing: true,
          ended: false,
            endEmitted: false,
              reading: true,
                sync: false,
                  needReadable: true,
                    emittedReadable: false,
                      readableListening: false,
                        resumeScheduled: false,
                          errorEmitted: false,
                            emitClose: false,
                              autoDestroy: false,
                                destroyed: false,
                                  errored: null,
                                    closed: false,
                                      closeEmitted: false,
                                        defaultEncoding: 'utf8',
                                          awaitDrainWriters: null,
                                            multiAwaitDrain: false,
                                              readingMore: false,
                                                decoder: null,
                                                  encoding: null,
                                                    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] {
    end: [Array],
      timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
          error: [Function: socketOnError],
            close: [Array],
              drain: [Function: bound socketOnDrain],
                resume: [Function: onSocketResume],
                  pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
    _maxListeners: undefined,
      _writableState: WritableState {
    objectMode: false,
      highWaterMark: 16384,
        finalCalled: false,
          needDrain: false,
            ending: false,
              ended: false,
                finished: false,
                  destroyed: false,
                    decodeStrings: false,
                      defaultEncoding: 'utf8',
                        length: 0,
                          writing: false,
                            corked: 0,
                              sync: true,
                                bufferProcessing: false,
                                  onwrite: [Function: bound onwrite],
                                    writecb: null,
                                      writelen: 0,
                                        afterWriteTickInfo: null,
                                          buffered: [],
                                            bufferedIndex: 0,
                                              allBuffers: true,
                                                allNoop: true,
                                                  pendingcb: 0,
                                                    prefinished: false,
                                                      errorEmitted: false,
                                                        emitClose: false,
                                                          autoDestroy: false,
                                                            errored: null,
                                                              closed: false,
                                                                closeEmitted: false
  },
  allowHalfOpen: true,
    _sockname: null,
      _pendingData: null,
        _pendingEncoding: '',
          server: Server {
    maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
        _events: [Object: null prototype],
          _eventsCount: 2,
            _maxListeners: undefined,
              _connections: 1,
                _handle: [TCP],
                  _usingWorkers: false,
                    _workers: [],
                      _unref: false,
                        allowHalfOpen: true,
                          pauseOnConnect: false,
                            httpAllowHalfOpen: false,
                              timeout: 0,
                                keepAliveTimeout: 5000,
                                  maxHeadersCount: null,
                                    headersTimeout: 60000,
                                      requestTimeout: 0,
                                        _connectionKey: '6::::4001',
                                          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                            [Symbol(ServerResponse)]: [Function: ServerResponse],
                                              [Symbol(kCapture)]: false,
                                                [Symbol(async_id_symbol)]: 92
  },
  _server: Server {
    maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
        _events: [Object: null prototype],
          _eventsCount: 2,
            _maxListeners: undefined,
              _connections: 1,
                _handle: [TCP],
                  _usingWorkers: false,
                    _workers: [],
                      _unref: false,
                        allowHalfOpen: true,
                          pauseOnConnect: false,
                            httpAllowHalfOpen: false,
                              timeout: 0,
                                keepAliveTimeout: 5000,
                                  maxHeadersCount: null,
                                    headersTimeout: 60000,
                                      requestTimeout: 0,
                                        _connectionKey: '6::::4001',
                                          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                            [Symbol(ServerResponse)]: [Function: ServerResponse],
                                              [Symbol(kCapture)]: false,
                                                [Symbol(async_id_symbol)]: 92
  },
  parser: HTTPParser {
    '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
        '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
            '4': [Function: parserOnMessageComplete],
              '5': [Function: bound onParserExecute],
                '6': [Function: bound onParserTimeout],
                  _headers: [],
                    _url: '',
                      socket: [Circular * 1],
                        incoming: [Circular * 2],
                          outgoing: null,
                            maxHeaderPairs: 2000,
                              _consumed: true,
                                onIncoming: [Function: bound parserOnIncoming],
                                  [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
  },
  on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
        _paused: false,
          _httpMessage: ServerResponse {
    _events: [Object: null prototype],
      _eventsCount: 1,
        _maxListeners: undefined,
          outputData: [],
            outputSize: 0,
              writable: true,
                destroyed: false,
                  _last: false,
                    chunkedEncoding: false,
                      shouldKeepAlive: true,
                        _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                            sendDate: true,
                              _removedConnection: false,
                                _removedContLen: false,
                                  _removedTE: false,
                                    _contentLength: null,
                                      _hasBody: true,
                                        _trailer: '',
                                          finished: false,
                                            _headerSent: false,
                                              socket: [Circular * 1],
                                                _header: null,
                                                  _keepAliveTimeout: 5000,
                                                    _onPendingData: [Function: bound updateOutgoingData],
                                                      _sent100: false,
                                                        _expect_continue: false,
                                                          req: [Circular * 2],
                                                            locals: [Object: null prototype] { },
    writeHead: [Function: writeHead],
      end: [Function: end],
        [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
            [Symbol(corked)]: 0,
              [Symbol(kOutHeaders)]: [Object: null prototype]
  },
  [Symbol(async_id_symbol)]: 102,
    [Symbol(kHandle)]: TCP {
    reading: true,
      onconnection: null,
        _consumed: true,
          [Symbol(owner_symbol)]: [Circular * 1]
  },
  [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
              [Symbol(kCapture)]: false,
                [Symbol(kBytesRead)]: 0,
                  [Symbol(kBytesWritten)]: 0,
                    [Symbol(RequestTimeout)]: undefined
},
httpVersionMajor: 1,
  httpVersionMinor: 1,
    httpVersion: '1.1',
      complete: true,
        headers: {
  'postman-token': 'e4d6292a-98bc-41c2-a286-a0ab0f1b3531',
    cookie: 'sid=s%3AR_gIH6yCvQg8HS-ES5UfTehz3HEOz1iA.CsBCJQ6sXsss7xA6G8jypw2%2BEbUYvH7nwB4y%2FzkT0rY'
},
rawHeaders: [
  'Postman-Token',
  'e4d6292a-98bc-41c2-a286-a0ab0f1b3531',
  'Cookie',
  'sid=s%3AR_gIH6yCvQg8HS-ES5UfTehz3HEOz1iA.CsBCJQ6sXsss7xA6G8jypw2%2BEbUYvH7nwB4y%2FzkT0rY'
],
  trailers: { },
rawTrailers: [],
  aborted: false,
    upgrade: false,
      url: '/users',
        method: 'GET',
          statusCode: null,
            statusMessage: null,
              client: <ref * 1 > Socket {
  connecting: false,
    _hadError: false,
      _parent: null,
        _host: null,
          _readableState: ReadableState {
    objectMode: false,
      highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
      pipes: [],
        flowing: true,
          ended: false,
            endEmitted: false,
              reading: true,
                sync: false,
                  needReadable: true,
                    emittedReadable: false,
                      readableListening: false,
                        resumeScheduled: false,
                          errorEmitted: false,
                            emitClose: false,
                              autoDestroy: false,
                                destroyed: false,
                                  errored: null,
                                    closed: false,
                                      closeEmitted: false,
                                        defaultEncoding: 'utf8',
                                          awaitDrainWriters: null,
                                            multiAwaitDrain: false,
                                              readingMore: false,
                                                decoder: null,
                                                  encoding: null,
                                                    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] {
    end: [Array],
      timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
          error: [Function: socketOnError],
            close: [Array],
              drain: [Function: bound socketOnDrain],
                resume: [Function: onSocketResume],
                  pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
    _maxListeners: undefined,
      _writableState: WritableState {
    objectMode: false,
      highWaterMark: 16384,
        finalCalled: false,
          needDrain: false,
            ending: false,
              ended: false,
                finished: false,
                  destroyed: false,
                    decodeStrings: false,
                      defaultEncoding: 'utf8',
                        length: 0,
                          writing: false,
                            corked: 0,
                              sync: true,
                                bufferProcessing: false,
                                  onwrite: [Function: bound onwrite],
                                    writecb: null,
                                      writelen: 0,
                                        afterWriteTickInfo: null,
                                          buffered: [],
                                            bufferedIndex: 0,
                                              allBuffers: true,
                                                allNoop: true,
                                                  pendingcb: 0,
                                                    prefinished: false,
                                                      errorEmitted: false,
                                                        emitClose: false,
                                                          autoDestroy: false,
                                                            errored: null,
                                                              closed: false,
                                                                closeEmitted: false
  },
  allowHalfOpen: true,
    _sockname: null,
      _pendingData: null,
        _pendingEncoding: '',
          server: Server {
    maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
        _events: [Object: null prototype],
          _eventsCount: 2,
            _maxListeners: undefined,
              _connections: 1,
                _handle: [TCP],
                  _usingWorkers: false,
                    _workers: [],
                      _unref: false,
                        allowHalfOpen: true,
                          pauseOnConnect: false,
                            httpAllowHalfOpen: false,
                              timeout: 0,
                                keepAliveTimeout: 5000,
                                  maxHeadersCount: null,
                                    headersTimeout: 60000,
                                      requestTimeout: 0,
                                        _connectionKey: '6::::4001',
                                          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                            [Symbol(ServerResponse)]: [Function: ServerResponse],
                                              [Symbol(kCapture)]: false,
                                                [Symbol(async_id_symbol)]: 92
  },
  _server: Server {
    maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
        _events: [Object: null prototype],
          _eventsCount: 2,
            _maxListeners: undefined,
              _connections: 1,
                _handle: [TCP],
                  _usingWorkers: false,
                    _workers: [],
                      _unref: false,
                        allowHalfOpen: true,
                          pauseOnConnect: false,
                            httpAllowHalfOpen: false,
                              timeout: 0,
                                keepAliveTimeout: 5000,
                                  maxHeadersCount: null,
                                    headersTimeout: 60000,
                                      requestTimeout: 0,
                                        _connectionKey: '6::::4001',
                                          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                            [Symbol(ServerResponse)]: [Function: ServerResponse],
                                              [Symbol(kCapture)]: false,
                                                [Symbol(async_id_symbol)]: 92
  },
  parser: HTTPParser {
    '0': [Function: bound setRequestTimeout],
      '1': [Function: parserOnHeaders],
        '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
            '4': [Function: parserOnMessageComplete],
              '5': [Function: bound onParserExecute],
                '6': [Function: bound onParserTimeout],
                  _headers: [],
                    _url: '',
                      socket: [Circular * 1],
                        incoming: [Circular * 2],
                          outgoing: null,
                            maxHeaderPairs: 2000,
                              _consumed: true,
                                onIncoming: [Function: bound parserOnIncoming],
                                  [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
  },
  on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
        _paused: false,
          _httpMessage: ServerResponse {
    _events: [Object: null prototype],
      _eventsCount: 1,
        _maxListeners: undefined,
          outputData: [],
            outputSize: 0,
              writable: true,
                destroyed: false,
                  _last: false,
                    chunkedEncoding: false,
                      shouldKeepAlive: true,
                        _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                            sendDate: true,
                              _removedConnection: false,
                                _removedContLen: false,
                                  _removedTE: false,
                                    _contentLength: null,
                                      _hasBody: true,
                                        _trailer: '',
                                          finished: false,
                                            _headerSent: false,
                                              socket: [Circular * 1],
                                                _header: null,
                                                  _keepAliveTimeout: 5000,
                                                    _onPendingData: [Function: bound updateOutgoingData],
                                                      _sent100: false,
                                                        _expect_continue: false,
                                                          req: [Circular * 2],
                                                            locals: [Object: null prototype] { },
    writeHead: [Function: writeHead],
      end: [Function: end],
        [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
            [Symbol(corked)]: 0,
              [Symbol(kOutHeaders)]: [Object: null prototype]
  },
  [Symbol(async_id_symbol)]: 102,
    [Symbol(kHandle)]: TCP {
    reading: true,
      onconnection: null,
        _consumed: true,
          [Symbol(owner_symbol)]: [Circular * 1]
  },
  [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
              [Symbol(kCapture)]: false,
                [Symbol(kBytesRead)]: 0,
                  [Symbol(kBytesWritten)]: 0,
                    [Symbol(RequestTimeout)]: undefined
},
_consuming: false,
  _dumped: false,
    next: [Function: next],
      baseUrl: '',
        originalUrl: '/users',
          _parsedUrl: Url {
  protocol: null,
    slashes: null,
      auth: null,
        host: null,
          port: null,
            hostname: null,
              hash: null,
                search: null,
                  query: null,
                    pathname: '/users',
                      path: '/users',
                        href: '/users',
                          _raw: '/users'
},
params: { },
query: { },
res: <ref * 3 > ServerResponse {
  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
    _maxListeners: undefined,
      outputData: [],
        outputSize: 0,
          writable: true,
            destroyed: false,
              _last: false,
                chunkedEncoding: false,
                  shouldKeepAlive: true,
                    _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                        sendDate: true,
                          _removedConnection: false,
                            _removedContLen: false,
                              _removedTE: false,
                                _contentLength: null,
                                  _hasBody: true,
                                    _trailer: '',
                                      finished: false,
                                        _headerSent: false,
                                          socket: <ref * 1 > Socket {
    connecting: false,
      _hadError: false,
        _parent: null,
          _host: null,
            _readableState: [ReadableState],
              _events: [Object: null prototype],
                _eventsCount: 8,
                  _maxListeners: undefined,
                    _writableState: [WritableState],
                      allowHalfOpen: true,
                        _sockname: null,
                          _pendingData: null,
                            _pendingEncoding: '',
                              server: [Server],
                                _server: [Server],
                                  parser: [HTTPParser],
                                    on: [Function: socketListenerWrap],
                                      addListener: [Function: socketListenerWrap],
                                        prependListener: [Function: socketListenerWrap],
                                          _paused: false,
                                            _httpMessage: [Circular * 3],
                                              [Symbol(async_id_symbol)]: 102,
                                                [Symbol(kHandle)]: [TCP],
                                                  [Symbol(kSetNoDelay)]: false,
                                                    [Symbol(lastWriteQueueSize)]: 0,
                                                      [Symbol(timeout)]: null,
                                                        [Symbol(kBuffer)]: null,
                                                          [Symbol(kBufferCb)]: null,
                                                            [Symbol(kBufferGen)]: null,
                                                              [Symbol(kCapture)]: false,
                                                                [Symbol(kBytesRead)]: 0,
                                                                  [Symbol(kBytesWritten)]: 0,
                                                                    [Symbol(RequestTimeout)]: undefined
  },
  _header: null,
    _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
          _expect_continue: false,
            req: [Circular * 2],
              locals: [Object: null prototype] { },
  writeHead: [Function: writeHead],
    end: [Function: end],
      [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
            [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
},
body: { },
_parsedOriginalUrl: Url {
  protocol: null,
    slashes: null,
      auth: null,
        host: null,
          port: null,
            hostname: null,
              hash: null,
                search: null,
                  query: null,
                    pathname: '/users',
                      path: '/users',
                        href: '/users',
                          _raw: '/users'
},
sessionStore: RedisStore {
  _events: [Object: null prototype] {
    disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
  },
  _eventsCount: 2,
    _maxListeners: undefined,
      prefix: 'sess:',
        scanCount: 100,
          serializer: Object[JSON] { },
  client: RedisClient {
    _events: [Object: null prototype],
      _eventsCount: 2,
        _maxListeners: undefined,
          address: '127.0.0.1:6379',
            connection_options: [Object],
              connection_id: 0,
                connected: true,
                  ready: true,
                    should_buffer: false,
                      command_queue: [Denque],
                        offline_queue: [Denque],
                          pipeline_queue: [Denque],
                            connect_timeout: 3600000,
                              enable_offline_queue: true,
                                retry_timer: null,
                                  retry_totaltime: 0,
                                    retry_delay: 200,
                                      retry_backoff: 1.7,
                                        attempts: 1,
                                          pub_sub_mode: 0,
                                            subscription_set: { },
    monitoring: false,
      message_buffers: false,
        closing: false,
          server_info: [Object],
            auth_pass: undefined,
              auth_user: undefined,
                selected_db: undefined,
                  fire_strings: true,
                    pipeline: false,
                      sub_commands_left: 0,
                        times_connected: 1,
                          buffers: false,
                            options: [Object],
                              reply: 'ON',
                                reply_parser: [JavascriptRedisParser],
                                  stream: [Socket],
                                    emitted_end: false,
                                      cork: [Function(anonymous)],
                                        uncork: [Function(anonymous)],
                                          [Symbol(kCapture)]: false
  },
  ttl: 86400,
    disableTTL: false,
      disableTouch: false,
        generate: [Function(anonymous)],
          [Symbol(kCapture)]: false
},
sessionID: 'R_gIH6yCvQg8HS-ES5UfTehz3HEOz1iA',
  session: Session {
  cookie: {
    path: '/',
      _expires: 2021 - 07 - 29T16: 05: 06.457Z,
        originalMaxAge: 3600000,
          httpOnly: false,
            secure: false,
              sameSite: true
  },
  uid: 4
},
route: Route {
  path: '/users',
    stack: [[Layer], [Layer]],
      methods: { get: true }
},
[Symbol(kCapture)]: false,
  [Symbol(RequestTimeout)]: undefined